<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="# Vibebox&#10;&#10;Vibebox é um projeto Java para gerenciamento de músicas, podcasts e favoritos. O objetivo é simular uma aplicação de streaming de áudio, permitindo adicionar, listar e curtir músicas e podcasts, além de gerenciar uma lista de favoritos.&#10;&#10;## Estrutura do Projeto&#10;&#10;```&#10;Vibebox.iml&#10;src/&#10;  Main.java&#10;  br/&#10;    com/&#10;      vibebox/&#10;        model/&#10;          Audio.java&#10;          Favorites.java&#10;          Podcast.java&#10;          Song.java&#10;```&#10;&#10;- **Main.java**: Ponto de entrada da aplicação.&#10;- **Audio.java**: Classe base para tipos de áudio.&#10;- **Song.java**: Representa uma música.&#10;- **Podcast.java**: Representa um podcast.&#10;- **Favorites.java**: Gerencia a lista de favoritos.&#10;&#10;## Funcionalidades&#10;&#10;- Adicionar músicas e podcasts.&#10;- Listar músicas e podcasts.&#10;- Curtir músicas e podcasts.&#10;- Gerenciar favoritos.&#10;&#10;## Como Executar&#10;&#10;1. Certifique-se de ter o Java instalado (JDK 8+).&#10;2. Compile os arquivos:&#10;   ```&#10;   javac src/Main.java src/br/com/vibebox/model/*.java&#10;   ```&#10;3. Execute o programa:&#10;   ```&#10;   java -cp src Main&#10;   ```&#10;&#10;## Requisitos&#10;&#10;- Java 8 ou superior&#10;&#10;## Exemplos de Uso&#10;&#10;- Adicionar uma música:&#10;  ```java&#10;  Song musica = new Song(&quot;Nome&quot;, &quot;Artista&quot;, 2024);&#10;  ```&#10;- Adicionar um podcast:&#10;  ```java&#10;  Podcast podcast = new Podcast(&quot;Título&quot;, &quot;Host&quot;, 10);&#10;  ```&#10;- Adicionar aos favoritos:&#10;  ```java&#10;  Favorites favoritos = new Favorites();&#10;  favoritos.add(musica);&#10;  favoritos.add(podcast);&#10;  ```&#10;&#10;## Contribuição&#10;&#10;Pull requests são bem-vindos! Para grandes mudanças, abra uma issue primeiro para discutir o que deseja modificar.&#10;&#10;## Licença&#10;&#10;Este projeto está sob a licença MIT.&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Main.java" />
              <option name="originalContent" value="import br.com.vibebox.model.Favorites;&#10;import br.com.vibebox.model.Podcast;&#10;import br.com.vibebox.model.Song;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Song musica = new Song();&#10;        musica.setTitulo(&quot;Bohemian Rhapsody&quot;);&#10;        musica.setArtista(&quot;Queen&quot;);&#10;&#10;        for (int i = 0; i &lt; 1000; i++) {&#10;            musica.reproduz();&#10;        }&#10;&#10;        for (int i = 0; i &lt; 50; i++) {&#10;            musica.curte();&#10;        }&#10;&#10;        Podcast podcast = new Podcast();&#10;        podcast.setTitulo(&quot;VibeBox&quot;);&#10;        podcast.setApresentador(&quot;Marcos Rocha&quot;);&#10;&#10;        for (int i = 0; i &lt; 500; i++) {&#10;            podcast.reproduz();&#10;        }&#10;&#10;        for (int i = 0; i &lt; 1000; i++) {&#10;            podcast.curte();&#10;        }&#10;&#10;        Favorites minhasPreferidas = new Favorites();&#10;        preferidas.inclui(musica);&#10;        preferidas.inclui(podcast);&#10;    }&#10;}" />
              <option name="updatedContent" value="import br.com.vibebox.model.Favorites;&#10;import br.com.vibebox.model.Podcast;&#10;import br.com.vibebox.model.Song;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Song musica = new Song();&#10;        musica.setTitulo(&quot;Bohemian Rhapsody&quot;);&#10;        musica.setArtista(&quot;Queen&quot;);&#10;&#10;        for (int i = 0; i &lt; 1000; i++) {&#10;            musica.reproduz();&#10;        }&#10;&#10;        for (int i = 0; i &lt; 50; i++) {&#10;            musica.curte();&#10;        }&#10;&#10;        Podcast podcast = new Podcast();&#10;        podcast.setTitulo(&quot;VibeBox&quot;);&#10;        podcast.setApresentador(&quot;Marcos Rocha&quot;);&#10;&#10;        for (int i = 0; i &lt; 500; i++) {&#10;            podcast.reproduz();&#10;        }&#10;&#10;        for (int i = 0; i &lt; 1000; i++) {&#10;            podcast.curte();&#10;        }&#10;&#10;        Favorites minhasPreferidas = new Favorites();&#10;        minhasPreferidas.inclui(musica);&#10;        minhasPreferidas.inclui(podcast);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/br/com/vibebox/model/Podcast.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/br/com/vibebox/model/Podcast.java" />
              <option name="originalContent" value="package br.com.vibebox.model;&#10;&#10;public class Podcast extends Audio {&#10;    private String apresentador;&#10;    private String descricao;&#10;    private int numeroDeEpisodios;&#10;&#10;    public String getApresentador() {&#10;        return apresentador;&#10;    }&#10;&#10;    public void setApresentador(String apresentador) {&#10;        this.apresentador = apresentador;&#10;    }&#10;&#10;    public String getDescricao() {&#10;        return descricao;&#10;    }&#10;&#10;    public void setDescricao(String descricao) {&#10;        this.descricao = descricao;&#10;    }&#10;&#10;    public int getNumeroDeEpisodios() {&#10;        return numeroDeEpisodios;&#10;    }&#10;&#10;    public void setNumeroDeEpisodios(int numeroDeEpisodios) {&#10;        this.numeroDeEpisodios = numeroDeEpisodios;&#10;    }&#10;&#10;    @Override&#10;    public int getClassificacao() {&#10;        if (this.getTotalDeCurtidas() &gt; 500) {&#10;            return 10;&#10;        } else {&#10;            return 8;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package br.com.vibebox.model;&#10;&#10;public class Podcast extends Audio {&#10;    private String apresentador;&#10;    private String descricao;&#10;    private int numeroDeEpisodios;&#10;&#10;    public String getApresentador() {&#10;        return apresentador;&#10;    }&#10;&#10;    public void setApresentador(String apresentador) {&#10;        this.apresentador = apresentador;&#10;    }&#10;&#10;    public String getDescricao() {&#10;        return descricao;&#10;    }&#10;&#10;    public void setDescricao(String descricao) {&#10;        this.descricao = descricao;&#10;    }&#10;&#10;    public int getNumeroDeEpisodios() {&#10;        return numeroDeEpisodios;&#10;    }&#10;&#10;    public void setNumeroDeEpisodios(int numeroDeEpisodios) {&#10;        this.numeroDeEpisodios = numeroDeEpisodios;&#10;    }&#10;&#10;    @Override&#10;    public int getClassificacao() {&#10;        if (this.getCurtidas() &gt; 500) {&#10;            return 10;&#10;        } else {&#10;            return 8;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>